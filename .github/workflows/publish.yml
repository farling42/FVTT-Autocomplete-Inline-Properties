# SPDX-FileCopyrightText: 2021 Johannes Loher
#
# SPDX-License-Identifier: MIT

name: Publish

on:
    push:
        tags:
            - "v*.*.*"

env:
    node_version: 16

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

            - name: Install node
              uses: actions/setup-node@v4.0.0
              with:
                  node-version: ${{ env.node_version }}

            - name: Cache Node.js modules
              uses: actions/cache@v3
              with:
                  path: .npm
                  key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.OS }}-node-
                      ${{ runner.OS }}-

            - name: Install dependencies
              run: npm ci --cache .npm --prefer-offline

            - name: Lint
              run: npm run lint

    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

            - name: Install node
              uses: actions/setup-node@v4.0.0
              with:
                  node-version: ${{ env.node_version }}

            - name: Cache Node.js modules
              uses: actions/cache@v3
              with:
                  path: .npm
                  key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.OS }}-node-
                      ${{ runner.OS }}-

            - name: Install dependencies
              run: npm ci --cache .npm --prefer-offline

            - name: Build
              run: npm run build
              env:
                  NODE_ENV: production

            - name: Archive production artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: dist
                  path: dist

    publish:
        needs:
            - lint
            - build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

            - name: Install node
              uses: actions/setup-node@v4.0.0
              with:
                  node-version: ${{ env.node_version }}

            - name: Download production artifacts for publication
              uses: actions/download-artifact@v4
              with:
                  name: dist
                  path: dist

            - name: Create zip file
              working-directory: ./dist
              run: zip -r ../module.zip .

            - name: Extract version
              run: |
                  echo "::set-output name=version::$(jq -r '.version' package.json)"
              id: extract_version

            - name: Create release
              id: create_version_release
              uses: ncipollo/release-action@v1
              with:
                  allowUpdates: false
                  name: ${{steps.extract_version.outputs.version}}
                  token: ${{ secrets.GITHUB_TOKEN }}
                  artifacts: "./module.json, ./module.zip"

            - name: Publish to Foundry Admin
              run: npx @ghost-fvtt/foundry-publish
              env:
                  FVTT_MANIFEST_PATH: ./module.json
                  FVTT_PACKAGE_ID: ${{ secrets.FVTT_PACKAGE_ID }}
                  FVTT_USERNAME: ${{ secrets.FVTT_USERNAME }}
                  FVTT_PASSWORD: ${{ secrets.FVTT_PASSWORD }}
                  FVTT_DELETE_OBSOLETE_VERSIONS: true
